# .github/workflows/ci.yml

name: PixelPacker CI

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest # Changed back to ubuntu based on user comment
    strategy:
      # Don't cancel other jobs if one fails
      fail-fast: false
      matrix:
        # Test on multiple supported Python versions
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          lfs: false

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install uv (needed for the uv commands below)
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Create virtual environment (using uv)
        run: uv venv --python ${{ matrix.python-version }}

      - name: Install dependencies (using uv)
        run: |
          source .venv/bin/activate
          # Install dev dependencies
          uv pip install -e '.[dev]'

      - name: Lint with Ruff
        env:
          PYTHON_VERSION_NODOT: ${{ matrix.python-version }}
        run: |
          source .venv/bin/activate
          TARGET_VERSION_NODOT="py${PYTHON_VERSION_NODOT//./}"
          echo "Using Ruff target version: $TARGET_VERSION_NODOT"
          ruff check --select=E9,F63,F7,F82 --target-version=$TARGET_VERSION_NODOT .
          ruff check --target-version=$TARGET_VERSION_NODOT . --output-format=github
        continue-on-error: true

      - name: Check formatting with Ruff
        env:
          PYTHON_VERSION_NODOT: ${{ matrix.python-version }}
        run: |
          source .venv/bin/activate
          TARGET_VERSION_NODOT="py${PYTHON_VERSION_NODOT//./}"
          echo "Using Ruff format target version: $TARGET_VERSION_NODOT"
          ruff format --check --target-version=$TARGET_VERSION_NODOT .
        continue-on-error: true

      - name: Run Non-Integration Tests with Pytest
        run: |
          source .venv/bin/activate
          # --- MODIFIED: Added -m "not integration" ---
          pytest -m "not integration" -n auto src/pixelpacker/tests/