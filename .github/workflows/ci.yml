# .github/workflows/ci.yml

name: PixelPacker CI

# Controls when the workflow will run
on:
  push:
    branches: [ main]
  pull_request:
    branches: [ main]

jobs:
  lint-and-test:
    # The type of runner that the job will run on
    runs-on: macos-latest
    strategy:
      # Don't cancel other jobs if one fails
      fail-fast: false
      matrix:
        # Test on multiple supported Python versions
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      # Install uv (needed for the uv commands below)
      - name: Install uv
        run: |
          python -m pip install --upgrade pip
          pip install uv

      - name: Create virtual environment (using uv)
        run: uv venv --python ${{ matrix.python-version }}

      - name: Install dependencies (using uv)
        run: |
          source .venv/bin/activate
          # Install the package in editable mode with 'dev' extras
          # Ensure your pyproject.toml defines [project.optional-dependencies.dev]
          # including pytest, pytest-xdist, ruff, etc.
          uv pip install -e .[dev]
      # --- Alternatively, using pip ---
      # - name: Install dependencies (using pip)
      #   run: |
      #     python -m venv .venv
      #     source .venv/bin/activate
      #     python -m pip install --upgrade pip
      #     pip install -e .[dev]

      - name: Lint with Ruff
        env: # Define env var for easier use
          PYTHON_VERSION_NODOT: ${{ matrix.python-version }} # Keep original for reference if needed
        run: |
          source .venv/bin/activate
          # Remove dot from version for Ruff: 3.11 -> 311 etc.
          TARGET_VERSION_NODOT="py${PYTHON_VERSION_NODOT//./}"
          echo "Using Ruff target version: $TARGET_VERSION_NODOT"
          # Use the modified version string
          ruff check --select=E9,F63,F7,F82 --target-version=$TARGET_VERSION_NODOT .
          ruff check --target-version=$TARGET_VERSION_NODOT . --output-format=github
        # Optional: Change back to continue-on-error: false if you want lint errors to fail the build
        continue-on-error: true

      - name: Check formatting with Ruff
        env: # Define env var for easier use
          PYTHON_VERSION_NODOT: ${{ matrix.python-version }}
        run: |
          source .venv/bin/activate
          # Remove dot from version for Ruff
          TARGET_VERSION_NODOT="py${PYTHON_VERSION_NODOT//./}"
          echo "Using Ruff format target version: $TARGET_VERSION_NODOT"
          # Pass the correct target version format
          ruff format --check --target-version=$TARGET_VERSION_NODOT .
        # Optional: Change back to continue-on-error: false
        continue-on-error: true

      - name: Run Tests with Pytest
        run: |
          source .venv/bin/activate
          # Run all tests in parallel
          # Consider adding '-m "not integration"' if integration tests are too slow/flaky for CI PR checks
          pytest -n auto -m "not integration" src/pixelpacker/tests/